#!/usr/bin/env node

var tailio = require('../'),
    program = require('commander'),
    http = require('http'),
    exec = require('child_process').exec,
    sio = require('socket.io'),
    dataSection = require('data-section'),
    ansispan = require('ansispan');

program
  .version(tailio.version)
  .option('-c --exec <command>', 'set execute command after server start')
  .parse(process.argv);

var index = dataSection.getSync('index');

tailio.emptyPort(function(err, port) {
  if (err) {
    abort(err.message);
  }
  start(port);
});

function start(port) {
  var server = http.createServer(function(req, res) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.end(index);
  });

  var io = sio.listen(server);
  io.sockets.on('connection', function(socket) {

  });

  server.listen(port, function() {
    console.log('Server listening on port %d', port);
    if (program.exec) {
      var cmd = program.exec + ' http://0.0.0.0:' + port;
      console.log(cmd);
      exec(cmd, function(err, stdout, stderr) {
        if (err) {
          console.log('exec error: %s', err.message);
        }
      });
    }

    var reader = new tailio.LineReader();
    reader.on('line', function(line) {
      io.sockets.emit('data', ansispan(line));
    }).on('close', function() {
      console.log('end');
      process.exit(0);
    }).on('error', function(err) {
      abort(err.message);
    });
    reader.read(process.stdin);
  });
}

/**
 * Exit with the given `str`.
 *
 * @param {String} str
 */

function abort(str) {
  console.error(str);
  process.exit(1);
}

/* __DATA__
@@ index
<!DOCTYPE html>
<html>
<head>
  <title></title>
  <script src="/socket.io/socket.io.js" type="text/javascript"></script>
  <script>
    window.onload = function() {
      var out = document.getElementById('out');
      var socket = io.connect();
      socket.on('data', function(data) {
        if (!data) {
           return;
        }

        console.log(data);

        var _doc = document;
        var div = _doc.createElement('div');
        div.innerHTML = data + '\n';

        while (div.firstChild) {
          out.appendChild(div.firstChild);
        }

        _doc.title = data.replace(/<.*?>/g, '') + ' - tail.io';

        if (window.scrollY + _doc.documentElement.clientHeight >= _doc.documentElement.scrollHeight) {
          window.scrollTo(0, _doc.body.scrollHeight);
        }
      });
    };
  </script>
</head>
<body>
  <pre id="out"></pre>
</body>
</html>
__DATA__*/